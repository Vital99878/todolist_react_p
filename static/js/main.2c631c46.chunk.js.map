{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","todo","done","className","SearchPanel","state","textSearch","searchChange","e","target","value","setState","props","onSearch","placeholder","type","this","onChange","Component","TodoListItem","label","important","on1","onToggleDone","onToggleImportant","classNames","onClick","TodoList","todos","on2","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","text","newItem","deleteItem","indx","findIndex","el","slice","toggleProperties","search","items","length","toLocaleLowerCase","indexOf","searchResult","arr","propName","oldItem","doneCount","todoCount","visibleList","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c631c46.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({todo, done}) => {\r\n  return (\r\n      <div className='app-header'>\r\n        <h1>Список дел</h1>\r\n        <h2>Осталось дел: {todo}, сделано: {done}. </h2>\r\n      </div>\r\n   );\r\n};\r\n  export default AppHeader;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n\r\n  state = {\r\n    textSearch: ''\r\n  };\r\n\r\n  searchChange = (e) => {\r\n    const textSearch = e.target.value;\r\n    this.setState({textSearch});\r\n    this.props.onSearch(textSearch);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <input\r\n            placeholder=\"поиск\"\r\n            className='form - control search-input'\r\n            type='text'\r\n            value={this.state.textSearch}\r\n            onChange= {this.searchChange}/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component{\r\n\r\n  render() {\r\n    const {label = false, done, important, on1, onToggleDone, onToggleImportant} = this.props;//см как работает destructing\r\n    let classNames = 'todo-list-item';\r\n    if( done ) {\r\n      classNames += ' done'; // добавление класса\r\n    }\r\n    if( important ) {\r\n      classNames += ' important';\r\n    }\r\n\r\n    return (\r\n         <span className= {classNames}>\r\n          <span\r\n              className='todo-list-item-label'\r\n              // style={style}\r\n              onClick={ onToggleDone }>\r\n              {label}\r\n          </span>\r\n          <button type=\"button\"\r\n                  className='btn btn-outline-success btn-sm float-right'\r\n                  onClick={ onToggleImportant }\r\n            >i</button>\r\n          <button className='btn btn-outline-danger btn-sm float-right'\r\n                  onClick={ on1 }>\r\n            <i className=\"fa fa-trash-o\"/>\r\n           </button>\r\n        </span>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item/todo-list-item.js\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, on2, onToggleImportant, onToggleDone}) => {\r\n  const elements = todos.map((item) => {\r\n    const {id, ...itemProps} = item;\r\n    return (\r\n        <li key={id} className='list-group-item'>\r\n          <TodoListItem {...itemProps}\r\n          on1 = { () => on2(id) }\r\n          onToggleDone = { () => onToggleDone (id) }\r\n          onToggleImportant = { () => onToggleImportant (id) }/>\r\n        </li>\r\n    );\r\n  });\r\n  return (\r\n      <ul className='list-group'>\r\n        {elements}\r\n      </ul>\r\n  )\r\n  };\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    {name: \"All\", label: \"Всего\"},\r\n    {name: \"Active\", label: \"Делаю\"},\r\n    {name: \"Done\", label: \"Сделано\"},\r\n  ];\r\n\r\n  render() {\r\n    const {filter, onFilterChange} = this.props;\r\n\r\n\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\r\n      return  <button type=\"button\"\r\n                      className={`btn ${clazz}`}\r\n                      key = {name}\r\n                      onClick = {() => onFilterChange(name)}\r\n                      >\r\n                {label}\r\n               </button>\r\n    });\r\n\r\n    return (\r\n        <div className=\"btn-group\">\r\n          { buttons }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <form className='item-add-form d-flex container'\r\n              onSubmit={this.onSubmit}>\r\n          <input type='text'\r\n                 className='form-control new'\r\n                 placeholder='Новая заметка?'\r\n                 onChange={this.onLabelChange}\r\n                 value={this.state.label}/>\r\n        </form>\r\n    )\r\n  }\r\n  state ={\r\n  label: ''\r\n};\r\nonLabelChange = (e) => {\r\n  this.setState({\r\n    label: e.target.value\r\n  })\r\n};\r\nonSubmit = (e) => {\r\n  e.preventDefault();\r\n  this.props.addItem(this.state.label);\r\n  this.state.label = '';\r\n};\r\n};\r\n\r\n","import React, {Component} from \"react\";\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport IteAddForm from \"../item-add-form\";\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Реакт'),\r\n      this.createTodoItem('Выпить кофе'),\r\n      this.createTodoItem('Купить жене сапоги')\r\n        ],\r\n    textSearch: '',\r\n    filter: \"All\" //Active, All, Done\r\n  };\r\n\r\n  createTodoItem(label){\r\n    return {\r\n        label,\r\n        important: false,\r\n        id: this.maxId++,\r\n        done: false}\r\n  };\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n    this.setState(({todoData}) => {\r\n      const newArray = [...todoData, newItem];\r\n      return {todoData: newArray};\r\n    });\r\n  };\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const indx = todoData.findIndex((el) => el.id === id);\r\n      const newArray = [\r\n          ...todoData.slice(0, indx),\r\n          ...todoData.slice(indx+1)\r\n      ];\r\n      return { todoData: newArray }\r\n    });\r\n  };\r\n  toggleProperties(arr, id, propName){\r\n      const indx = arr.findIndex((el) => el.id === id);// индекс заменяемого массива(из state)\r\n      const oldItem = arr[indx];\r\n      const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n      return [\r\n        ...arr.slice(0, indx),\r\n        newItem,\r\n        ...arr.slice(indx+1)\r\n      ];\r\n  }\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return{\r\n        todoData: this.toggleProperties(todoData, id, 'done')\r\n      }\r\n    })\r\n  };\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return{\r\n        todoData: this.toggleProperties(todoData, id, 'important')\r\n      }\r\n    })\r\n  };\r\n  search = (items, textSearch) => {\r\n    if(textSearch.length === 0){\r\n      return items;\r\n    }\r\n     return items.filter((item) => {\r\n      return item.label\r\n          .toLocaleLowerCase()\r\n          .indexOf(textSearch.toLocaleLowerCase()) > -1;\r\n    })\r\n  };\r\n  searchResult = (textSearch) => {\r\n    this.setState({textSearch});\r\n  };\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter});\r\n  };\r\n  //<editor-fold desc=\"сделана без toggleProperties\">\r\n  // onToggleImportant = (id) => { //\r\n  //   this.setState(({todoData}) => {\r\n  //     const indx = todoData.findIndex((el) => el.id === id);\r\n  //     const oldItem = todoData[indx];\r\n  //     const newItem = {...oldItem, important: !oldItem.important};\r\n  //     const newArray = [\r\n  //       ...todoData.slice(0, indx),\r\n  //       newItem,\r\n  //       ...todoData.slice(indx+1)\r\n  //     ];\r\n  //     return {todoData: newArray};\r\n  //   })\r\n  // };\r\n  //</editor-fold>\r\n\r\n  filter = (items, filter) => {\r\n    switch (filter) {\r\n      case \"All\":\r\n      return items;\r\n      case \"Active\":\r\n        return items.filter((item) => !item.done );\r\n      case \"Done\":\r\n        return items.filter((item) => {\r\n         return item.done;\r\n        });\r\n      default:\r\n        return items;\r\n    }\r\n\r\n  };\r\n\r\n  render () {\r\n    const {todoData, textSearch, filter} = this.state;\r\n    const doneCount =  todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n    const visibleList = this.filter(\r\n      this.search(todoData, textSearch), filter);\r\n\r\n    return (\r\n        <div className='todo-app container'>\r\n          <AppHeader todo={ todoCount } done = {doneCount}/>\r\n          <div className='top-panel d-flex'>\r\n            <SearchPanel\r\n                onSearch={ this.searchResult }/>\r\n            <ItemStatusFilter filter = {filter}\r\n                              onFilterChange = {this.onFilterChange} />\r\n          </div>\r\n          <TodoList todos={ visibleList }\r\n                    on2={ this.deleteItem }\r\n                    onToggleImportant = {this.onToggleImportant}\r\n                    onToggleDone = {this.onToggleDone}/>\r\n          <IteAddForm addItem = { this.addItem }/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport App from \"./components/app/app\";\r\n\r\n\r\n ReactDom.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}